import Head from "next/head";
import Link from "next/link";
import { useState, useEffect } from "react";
import { format, parseISO } from "date-fns";
import NavBar from "../components/navbar";
import { DataStore, Predicates, SortDirection } from "@aws-amplify/datastore";
import { Posts } from "../src/models";
import matter from "gray-matter";

export default function Projects() {
  const [posts, setPosts] = useState([]);
  useEffect(() => {
    fetchPosts();
    async function fetchPosts() {
      const models = await DataStore.query(Posts, Predicates.ALL, {
        sort: (s) => s.updatedAt(SortDirection.DESCENDING),
      });
      console.log(models);
      setPosts(models);
    }
    const subscription = DataStore.observe(Posts).subscribe(() => fetchPosts());
    return () => subscription.unsubscribe();
  }, []);
  return (
    <div className="bg-accent-dark">
      <Head>
        <title>albac: projects</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <NavBar title="Projects" />
        <div className="mt-24 h-screen bg-slate-100 dark:bg-slate-900 bg-daytime dark:bg-hero overflow-auto scroll-smooth">
          <div className="flex justify-center flex-grow">
            <div className="flex px-10 sm:px-20">
              <div className="space-y-10 mt-10 ">
                {posts.map((item) => (
                  <BlogListItem key={item.id} {...item} />
                ))}
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

function BlogListItem(item) {
  const slug = item.id;
  const { data } = matter(item.content);

  return (
    <div className="border font-light text-lg space-y-2 hover:border-slate-400 dark:bg-slate-800 dark:border-white/5 border-black-400 rounded p-4">
      <div>
        <Link href={`/blog/${slug}`}>
          <button className="text-blue-600 hover:text-blue-500 dark:text-sky-400 font-semibold antialiased">
            {data.title}
          </button>
        </Link>
      </div>
      <div className="text-xs text-gray-600 dark:text-gray-200">
        Published {format(parseISO(item.createdAt), "MMMM do, uuu")} <br/>
        Last updated on {format(parseISO(item.updatedAt), "MMMM do, uuu")}
      </div>
      <div className="italic text-sm">{item.summary}</div>
    </div>
  );
}
